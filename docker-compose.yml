version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: steuer-fair-postgres
    environment:
      POSTGRES_DB: steuer_fair_db
      POSTGRES_USER: steuer_fair_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - steuer-fair-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U steuer_fair_user -d steuer_fair_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: steuer-fair-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - steuer-fair-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # API Backend
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: steuer-fair-api
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://steuer_fair_user:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/steuer_fair_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      CORS_ORIGIN: ${FRONTEND_URL:-http://localhost:3000}
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - steuer-fair-network
    restart: unless-stopped
    volumes:
      - ./apps/api/uploads:/app/uploads

  # Web Frontend
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: steuer-fair-web
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${API_URL:-http://localhost:3001}
      NEXT_PUBLIC_APP_URL: ${FRONTEND_URL:-http://localhost:3000}
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - steuer-fair-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: steuer-fair-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./infrastructure/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - web
      - api
    networks:
      - steuer-fair-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  steuer-fair-network:
    driver: bridge
